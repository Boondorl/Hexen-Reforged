class RPGMelee : RPGWeapon
{
	enum EDirections
	{
		DIR_LEFT = 1,
		DIR_RIGHT = 2,
		DIR_FORW = 3,
		DIR_BACK = 4
	};
	
	BlockBox shield;
	class<BlockBox> shieldType;
	
	int direction;
	bool bCancelled;
	bool bReadyToBlock;
	private int dirTimer;
	private int blockTimer;
	
	property ShieldType : shieldType;
	
	Default
	{
		+WEAPON.NOALERT
	}
	
	action void A_MeleeCheckBlock(int offset = 0)
	{
		if (player.cmd.buttons & BT_RELOAD)
			player.SetPsprite(PSP_WEAPON, player.ReadyWeapon.FindState("Reload")+offset);
	}
	
	action void A_MeleeBlock()
	{
		if (invoker.shieldType)
		{
			invoker.shield = BlockBox(Spawn(invoker.shieldType, pos));
			if (invoker.shield)
				invoker.shield.master = self;
		}
	}
	
	action void A_MeleeUnblock()
	{
		if (invoker.shield)
			invoker.shield.Destroy();
		
		invoker.blockTimer = 8;
		invoker.bCancelled = false;
	}
	
	action void A_CheckSwing(bool heavy = false)
	{
		Weapon w = player.ReadyWeapon;
		switch (invoker.direction)
		{
			case DIR_LEFT:
				if (heavy)
					player.SetPsprite(PSP_WEAPON, w.FindState("AltFireLeft"));
				else
					player.SetPsprite(PSP_WEAPON, w.FindState("FireLeft"));
				break;
				
			case DIR_RIGHT:
				if (heavy)
					player.SetPsprite(PSP_WEAPON, w.FindState("AltFireRight"));
				else
					player.SetPsprite(PSP_WEAPON, w.FindState("FireRight"));
				break;
				
			case DIR_FORW:
				if (heavy)
					player.SetPsprite(PSP_WEAPON, w.FindState("AltFireUp"));
				else
					player.SetPsprite(PSP_WEAPON, w.FindState("FireUp"));
				break;
				
			case DIR_BACK:
				if (heavy)
					player.SetPsprite(PSP_WEAPON, w.FindState("AltFireDown"));
				else
					player.SetPsprite(PSP_WEAPON, w.FindState("FireDown"));
				break;
		}
	}
	
	override State GetUpState()
	{
		bReadyToBlock = false;
		return super.GetUpState();
	}
	
	override State GetDownState()
	{
		bReadyToBlock = false;
		return super.GetDownState();
	}
	
	override State GetReadyState()
	{
		bReadyToBlock = true;
		return super.GetReadyState();
	}
	
	override void OwnerDied()
	{
		blockTimer = 0;
		bCancelled = false;
	}
	
	override void DoEffect()
	{
		super.DoEffect();
		
		if (owner.health > 0 && owner.player && owner.player.ReadyWeapon == self)
		{
			if ((owner.player.cmd.buttons & BT_RELOAD) && !bCancelled && blockTimer <= 0 && bReadyToBlock)
			{
				State block = FindState("Reload");
				if (block)
				{
					bCancelled = true;
					owner.player.SetPsprite(PSP_WEAPON, block);
				}
			}
		}
		
		if (blockTimer > 0)
			--blockTimer;
		
		if (dirTimer > 0)
		{
			--dirTimer;
			if (dirTimer <= 0)
				direction = 0;
		}
		
		if (owner.player)
		{
			double fm = owner.player.cmd.forwardmove;
			double sm  = owner.player.cmd.sidemove;
			
			if (fm || sm)
			{
				if (sm > 0)
					direction = DIR_RIGHT;
				else if (sm < 0)
					direction = DIR_LEFT;
				else if (fm > 0)
					direction = DIR_FORW;
				else
					direction = DIR_BACK;
				
				dirTimer = 9;
			}
		}
	}
}