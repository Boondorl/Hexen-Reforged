class CentaurBlock : BlockBox
{
	Default
	{
		Radius 16;
		Height 32;
		BlockBox.Length 12;
		BlockBox.BlockSound "FighterHammerHitWall";
		BlockBox.BlockReduction 0.5;
		BlockBox.ParryReduction 0.7;
		BlockBox.ParryWindow 4;
		BlockBox.ForwardOffset 32;
		BlockBox.UpOffset 32;
	}
}

// Thank god
class ReforgedCentaur : RPGMonster replaces Centaur
{
	Default
	{
		RPGMonster.XP 70;
		RPGMonster.ArmorType AR_CHEST|AR_HELM|AR_SHIELD|AR_BRACE;
		RPGMonster.ShieldType "CentaurBlock";
		Health 250;
		Painchance 135;
		Speed 12;
		Radius 20;
		Height 64;
		Mass 120;
		SeeSound "CentaurSight";
		AttackSound "CentaurAttack";
		PainSound "CentaurPain";
		DeathSound "CentaurDeath";
		ActiveSound "CentaurActive";
		HowlSound "PuppyBeat";
		Obituary "$OB_CENTAUR";
		Tag "$FN_CENTAUR";
		
		+RPGMONSTER.BLOCKER
	}
	
	States
	{
		Spawn:
			CENT AB 10 A_MonsterLook;
			Loop;
			
		See:
			CENT ABCD 4 A_MonsterChase;
			Loop;
			
		Block:
			CENT E 2 A_MonsterFaceTarget;
			TNT1 A 0 A_MonsterBlock;
			CENT EEEEEEE 5 A_MonsterFaceTarget;
		Unblock:
			TNT1 A 0 A_MonsterUnblock(random(70,105));
			CENT E 2 A_MonsterFaceTarget;
			Goto See;
			
		Parry:
			CENT G 35 A_Pain;
			Goto See;
			
		Stumble:
			TNT1 A 0 A_Stumble;
			CENT G 18 A_Pain;
			Goto See;
			
		Shock:
			CENT G 9 A_StartSound(HowlSound, CHAN_VOICE);
			CENT G 9;
			CENT G 9 A_StartSound(HowlSound, CHAN_VOICE);
			CENT G 9;
			CENT G 9 A_StartSound(HowlSound, CHAN_VOICE);
			CENT G 9;
			CENT G 9 A_StartSound(HowlSound, CHAN_VOICE);
			CENT G 9;
			Goto See;
			
		Pain:
			CENT G 6 A_Pain;
			CENT G 6;
			Goto See;
			
		Melee:
			CENT H 5 A_MonsterFaceTarget;
			CENT I 4 A_MonsterFaceTarget;
			CENT J 7 A_CustomMeleeAttack(random[CentaurAttack](3,9));
			Goto See;
			
		Death:
			CENT K 4;
			CENT L 4 A_Scream;
			CENT MN 4;
			CENT O 4 A_NoBlocking;
			CENT PQ 4;
			CENT R 4 A_QueueCorpse;
			CENT S 4;
			CENT T -1;
			Stop;
			
		XDeath:
			CTXD A 4;
			CTXD B 4 A_NoBlocking;
			CTXD C 4
			{
				A_SpawnItemEx("CentaurSword", 0, 0, 45,
									1 + random[CentaurDrop](-128,127)*0.03125,
									1 + random[CentaurDrop](-128,127)*0.03125,
									8 + random[CentaurDrop](0,255)*0.015625, 270);
				A_SpawnItemEx("CentaurShield", 0, 0, 45,
									1 + random[CentaurDrop](-128,127)*0.03125,
									1 + random[CentaurDrop](-128,127)*0.03125,
									8 + random[CentaurDrop](0,255)*0.015625, 90);
			}
			CTXD D 3 A_Scream;
			CTXD E 4 A_QueueCorpse;
			CTXD F 3;
			CTXD G 4;
			CTXD H 3;
			CTXD I 4;
			CTXD J 3;
			CTXD K -1;
			
		Ice:
			CENT U 5 A_FreezeDeath;
			CENT U 1 A_FreezeDeathChunks;
			Wait;
	}
	
	override void BeginPlay()
	{
		super.BeginPlay();
		
		CreateBox("CentaurBody");
		CreateBox("CentaurHead");
	}
	
	override bool Block(Actor mo, double maxAng, bool fromDamage)
	{
		if (!mo || !bBlocker || bDontBlock || bBlocking || blockCoolDown > 0 || health <= 0)
			return false;
		
		if (InStateSequence(CurState, SpawnState) || InStateSequence(CurState, FindState("Parry")))
			return false;
		
		if (AbsAngle(idealAngle, AngleTo(mo)) > maxAng)
			return false;
		
		if (!fromDamage && !CheckSight(mo))
			return false;
		
		State block = FindState("Block");
		if (block)
		{
			if (!random(0,2))
			{
				SetState(block);
				bCancelled = true;
				return true;
			}
			else
				blockCoolDown = 5;
		}
		
		return false;
	}
}

class ReforgedCentaurLeader : ReforgedCentaur replaces CentaurLeader {}

class CentaurBody : CollisionBox
{
	Default
	{
		CollisionBox.Length 20;
		Radius 20;
		Height 48;
	}
}

class CentaurHead : CollisionBox
{
	Default
	{
		CollisionBox.Multi 1.5;
		CollisionBox.ForwardOffset 7;
		CollisionBox.UpOffset 48;
		CollisionBox.Length 13;
		Radius 13;
		Height 16;
		
		+COLLISIONBOX.CRITICALZONE
	}
}