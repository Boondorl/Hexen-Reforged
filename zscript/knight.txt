class ReforgedKnight : RPGMonster
{
	Default
	{
		RPGMonster.JumpSpeed 7;
		RPGMonster.XP 70;
		RPGMonster.ArmorType AR_CHEST|AR_HELM|AR_BRACE;
		Health 250;
		Radius 24;
		Height 78;
		DeathHeight 39;
		Damage 50;
		Mass 150;
		Speed 3;
		Painchance 100;
		MeleeRange 64;
		SeeSound "hknight/sight";
		AttackSound "hknight/attack";
		PainSound "hknight/pain";
		DeathSound "hknight/death";
		ActiveSound "hknight/active";
		Obituary "$OB_BONEKNIGHT";
		HitObituary "$OB_BONEKNIGHTHIT";
		Tag "$FN_BONEKNIGHT";
		
		+RPGMONSTER.JUMPER
		-NOICEDEATH
	}
	
	States
	{
		Spawn:
			KNIG AABB 5 A_MonsterLook;
			Loop;
			
		See:
			KNIG ABCD 4 A_MonsterChase;
			Loop;
			
		/*Melee:
			KNIG EF 6 A_MonsterFaceTarget;
			KNIG G 6 A_ReforgedComboAttack("RKnightAxe", 32, 12, "hknight/melee");
			Goto See;*/
			
		Missile:
			KNIG E 10 A_KnightDecide;
			KNIG F 8 A_MonsterFaceTarget;
			KNIG G 8 A_MonsterProjectile("RKnightAxe");
			KNIG E 10 A_MonsterFaceTarget;
			KNIG F 8 A_MonsterFaceTarget;
			KNIG G 8 A_MonsterProjectile("RKnightAxe");
			TNT1 A 0 {SetState(SeeState);}
			
			KNIG E 10 A_MonsterFaceTarget;
			KNIG F 8 A_MonsterFaceTarget;
			KNIG G 8 A_MonsterProjectile("RRedAxe");
			Goto See;
			
		Stumble:
			TNT1 A 0 A_Stumble;
			KNIG H 18 A_Pain;
			Goto See;
			
		Shock:
			KNIG H 9 A_StartSound(PainSound, CHAN_VOICE);
			KNIG H 9;
			KNIG H 9 A_StartSound(PainSound, CHAN_VOICE);
			KNIG H 9;
			KNIG H 9 A_StartSound(PainSound, CHAN_VOICE);
			KNIG H 9;
			KNIG H 9 A_StartSound(PainSound, CHAN_VOICE);
			KNIG H 9;
			Goto See;
			
		Pain:
			KNIG H 3;
			KNIG H 3 A_Pain;
			Goto See;
			
		Death:
			KNIG I 6;
			KNIG J 6 A_Scream;
			KNIG K 6;
			KNIG L 6 A_NoBlocking;
			KNIG MN 6;
			KNIG O -1;
			Stop;
			
		Raise:
			KNIG NMLKJI 6;
			Goto See;
	}

	void A_KnightDecide()
	{
		// Throw axe
		A_PlaySound(AttackSound, CHAN_BODY);
		if (random[KnightAttack]() < 40)
		{ // Red axe
			SetState(FindState("Missile")+7);
		}
		else
		{ // Green axe
			A_MonsterFaceTarget();
		}
	}
	
	override void BeginPlay()
	{
		super.BeginPlay();
		
		CreateBox("KnightBody");
		CreateBox("KnightHead");
	}
}

class KnightBody : CollisionBox
{
	Default
	{
		Radius 24;
		Height 66;
	}
}

class KnightHead : CollisionBox
{
	Default
	{
		CollisionBox.Multi 1.5;
		CollisionBox.ForwardOffset 8;
		CollisionBox.UpOffset 66;
		Radius 9;
		Height 12;
		
		+COLLISIONBOX.CRITICALZONE
	}
}

class RKnightAxe : RPGMissile
{
	Default
	{
		Radius 6;
		Height 12;
		Speed 12;
		Damage 20;
		DamageType "Cleave";
		RPGMissile.AilmentType "Bleed";
		RPGMissile.AilmentPower 35;
		RPGMissile.AilmentDamage 10;
		DeathSound "hknight/hit";
		
		-ACTIVATEIMPACT
		-ACTIVATEPCROSS
	}

	States
	{
		Spawn:
			SPAX A 3 BRIGHT A_PlaySound("hknight/axewhoosh");
			SPAX BC 3 BRIGHT;
			Loop;
			
		Death:
			SPAX DEF 6 BRIGHT;
			Stop;
	}
}

class RRedAxe : RKnightAxe
{
	Default
	{
		Damage 35;
	}

	States
	{
		Spawn:
			RAXE AB 5 BRIGHT A_DripBlood;
			Loop;
			
		Death:
			RAXE CDE 6 BRIGHT;
			Stop;
	}
	
	void A_DripBlood()
	{
		double xo = random2[DripBlood]() / 32.0;
		double yo = random2[DripBlood]() / 32.0;
		Actor mo = Spawn("Blood", Vec3Offset(xo, yo, 0.), ALLOW_REPLACE);
		if (mo)
		{
			mo.Vel.X = random2[DripBlood]() / 64.0;
			mo.Vel.Y = random2[DripBlood]() / 64.0;
			mo.Gravity = 1./8;
		}
	}
}