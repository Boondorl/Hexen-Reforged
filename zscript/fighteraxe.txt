class AxeShield : BlockBox
{
	Default
	{
		Radius 12;
		Height 16;
		BlockBox.Length 6;
		BlockBox.BlockSound "FighterHammerHitWall";
		BlockBox.BlockReduction 0.5;
		BlockBox.ParryReduction 0.7;
		BlockBox.ParryWindow 5;
		BlockBox.ForwardOffset 24;
		BlockBox.UpOffset 32;
		BlockBox.SideOffset -2;
	}
}

class ReforgedAxe : RPGMelee replaces FWeapAxe
{
	Default
	{
		RPGMelee.ShieldType "AxeShield";
		Weapon.AmmoType1 "BlueMana";
		Weapon.AmmoType2 "RedMana";
		Weapon.SelectionOrder 1500;
		Weapon.KickBack 150;
		Weapon.YAdjust -12;
		Inventory.PickupMessage "$TXT_WEAPON_F2";
		Obituary "$OB_MPFWEAPAXE";
		Tag "$TAG_FWEAPAXE";
		
		+WEAPON.AXEBLOOD
		+WEAPON.MELEEWEAPON
	}

	States
	{
		Spawn:
			WFAX A -1;
			Stop;
			
		Select:
			FAXE A 1 A_FAxeCheckUp;
			Loop;
			
		Deselect:
			FAXE A 1 A_Lower;
			Loop;
			
		Ready:
			FAXE A 1 A_FAxeCheckReady;
			Loop;
			
		Reload:
			FAXE B 2 Offset (15, 32);
			FAXE C 2 Offset (15, 32) A_MeleeBlock;
			FAXE C 1 Offset (15, 32);
			TNT1 A 0 A_MeleeCheckBlock(2);
			FAXE C 1 Offset (15, 32);
			FAXE C 2 Offset (15, 32) A_MeleeUnblock;
			FAXE B 2 Offset (15, 32) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1);
			Goto Ready;
			
		User1:
			TNT1 A 0 A_PlaySound("FighterPunchMiss", CHAN_WEAPON);
			FPCH B 4 Offset (5, 40);
			FPCH C 3 Offset (5, 40) A_Melee("ShieldBash", 20, 0, 1, 32);
			FPCH D 3 Offset (5, 40);
			FPCH C 3 Offset (5, 40) A_WeaponReady(WRF_NOBOB);
			FPCH B 4 Offset (5, 40) A_WeaponReady(WRF_NOBOB);
			Goto Ready;
			
		Fire:
			TNT1 A 0 A_FAxeCheckAtk;
			TNT1 A 0 A_CheckSwing;
			FAXE B 4 Offset (15, 32);
			FAXE C 3 Offset (15, 32);
			FAXE D 2 Offset (15, 32);
			TNT1 A 0 A_PlaySound("FighterHammerMiss", CHAN_WEAPON);
			FAXE D 1 Offset (-5, 70)
			{
				double minAng = 10;
				double maxAng = -20;
				double rol = 20;
				
				if (player.refire % 2)
				{
					minAng = -20;
					maxAng = 10;
					rol *= -1;
				}
				
				A_Melee("AxeHurtBox", 37, 25, 5, 48, minAng, maxAng, 10, -15, rol, rol);
			}
			FAXE D 2 Offset (-25, 90);
			FAXE E 1 Offset (15, 32);
			FAXE E 2 Offset (10, 54);
			FAXE E 7 Offset (10, 150) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			TNT1 A 0 A_ReFire;
			FAXE A 1 Offset (0, 60) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 52) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 44) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 36) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1;
			Goto Ready;
			
		FireLeft:
			FAXE B 4 Offset (15, 32);
			FAXE C 3 Offset (15, 32);
			FAXE D 2 Offset (15, 32);
			TNT1 A 0 A_PlaySound("FighterHammerMiss", CHAN_WEAPON);
			FAXE D 1 Offset (-5, 70) A_Melee("AxeHurtBox", 25, 25, 5, 48, 45, -45, 0, 0, 90, 90);
			FAXE D 2 Offset (-25, 90);
			FAXE E 1 Offset (15, 32);
			FAXE E 2 Offset (10, 54);
			FAXE E 7 Offset (10, 150) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			TNT1 A 0 A_ReFire;
			FAXE A 1 Offset (0, 60) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 52) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 44) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 36) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1;
			Goto Ready;
			
		FireRight:
			FAXE B 4 Offset (15, 32);
			FAXE C 3 Offset (15, 32);
			FAXE D 2 Offset (15, 32);
			TNT1 A 0 A_PlaySound("FighterHammerMiss", CHAN_WEAPON);
			FAXE D 1 Offset (-5, 70) A_Melee("AxeHurtBox", 25, 25, 5, 48, -45, 45, 0, 0, -90, -90);
			FAXE D 2 Offset (-25, 90);
			FAXE E 1 Offset (15, 32);
			FAXE E 2 Offset (10, 54);
			FAXE E 7 Offset (10, 150) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			TNT1 A 0 A_ReFire;
			FAXE A 1 Offset (0, 60) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 52) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 44) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 36) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1;
			Goto Ready;
			
		FireUp:
			FAXE B 4 Offset (15, 32);
			FAXE C 3 Offset (15, 32);
			FAXE D 2 Offset (15, 32);
			TNT1 A 0 A_PlaySound("FighterHammerMiss", CHAN_WEAPON);
			FAXE D 1 Offset (-5, 70) A_Melee("AxeHurtBox", 50, 25, 5, 48, 0, 0, 45, -10);
			FAXE D 2 Offset (-25, 90);
			FAXE E 1 Offset (15, 32);
			FAXE E 2 Offset (10, 54);
			FAXE E 7 Offset (10, 150) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			TNT1 A 0 A_ReFire;
			FAXE A 1 Offset (0, 60) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 52) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 44) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 36) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1;
			Goto Ready;
			
		FireDown:
			FAXE B 4 Offset (15, 32);
			FAXE C 3 Offset (15, 32);
			FAXE D 2 Offset (15, 32);
			TNT1 A 0 A_PlaySound("FighterHammerMiss", CHAN_WEAPON);
			FAXE D 1 Offset (-5, 70) A_Melee("AxeHurtBox", 50, 25, 5, 48, -20, 10, -10, 45, -160, -160);
			FAXE D 2 Offset (-25, 90);
			FAXE E 1 Offset (15, 32);
			FAXE E 2 Offset (10, 54);
			FAXE E 7 Offset (10, 150) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			TNT1 A 0 A_ReFire;
			FAXE A 1 Offset (0, 60) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 52) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 44) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 36) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1;
			Goto Ready;
			
		AltFire:
			TNT1 A 0 A_FAxeCheckHeavyAtk;
			TNT1 A 0 A_CheckSwing(true);
			TNT1 A 10;
			FAXE B 4 Offset (15, 32);
			FAXE C 3 Offset (15, 32);
			FAXE D 2 Offset (15, 32);
			TNT1 A 0 A_PlaySound("FighterHammerMiss", CHAN_WEAPON);
			FAXE D 1 Offset (-5, 70)
			{
				double minAng = 10;
				double maxAng = -20;
				double rol = 20;
				
				if (player.refire % 2)
				{
					minAng = -20;
					maxAng = 10;
					rol *= -1;
				}
				
				A_Melee("HeavyAxeHurtBox", 75, 25, 5, 48, minAng, maxAng, 10, -15, rol, rol);
			}
			FAXE D 2 Offset (-25, 90);
			FAXE E 1 Offset (15, 32);
			FAXE E 2 Offset (10, 54);
			FAXE E 7 Offset (10, 150) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			TNT1 A 0 A_ReFire;
			FAXE A 1 Offset (0, 60) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 52) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 44) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 36) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1;
			Goto Ready;
			
		AltFireLeft:
			TNT1 A 10;
			FAXE B 4 Offset (15, 32);
			FAXE C 3 Offset (15, 32);
			FAXE D 2 Offset (15, 32);
			TNT1 A 0 A_PlaySound("FighterHammerMiss", CHAN_WEAPON);
			FAXE D 1 Offset (-5, 70) A_Melee("HeavyAxeHurtBox", 50, 25, 5, 48, 45, -45, 0, 0, 90, 90);
			FAXE D 2 Offset (-25, 90);
			FAXE E 1 Offset (15, 32);
			FAXE E 2 Offset (10, 54);
			FAXE E 7 Offset (10, 150) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			TNT1 A 0 A_ReFire;
			FAXE A 1 Offset (0, 60) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 52) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 44) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 36) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1;
			Goto Ready;
			
		AltFireRight:
			TNT1 A 10;
			FAXE B 4 Offset (15, 32);
			FAXE C 3 Offset (15, 32);
			FAXE D 2 Offset (15, 32);
			TNT1 A 0 A_PlaySound("FighterHammerMiss", CHAN_WEAPON);
			FAXE D 1 Offset (-5, 70) A_Melee("HeavyAxeHurtBox", 50, 25, 5, 48, -45, 45, 0, 0, -90, -90);
			FAXE D 2 Offset (-25, 90);
			FAXE E 1 Offset (15, 32);
			FAXE E 2 Offset (10, 54);
			FAXE E 7 Offset (10, 150) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			TNT1 A 0 A_ReFire;
			FAXE A 1 Offset (0, 60) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 52) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 44) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 36) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1;
			Goto Ready;
			
		AltFireUp:
			TNT1 A 10;
			FAXE B 4 Offset (15, 32);
			FAXE C 3 Offset (15, 32);
			FAXE D 2 Offset (15, 32);
			TNT1 A 0 A_PlaySound("FighterHammerMiss", CHAN_WEAPON);
			FAXE D 1 Offset (-5, 70) A_Melee("HeavyAxeHurtBox", 100, 25, 5, 48, 0, 0, 45, -10);
			FAXE D 2 Offset (-25, 90);
			FAXE E 1 Offset (15, 32);
			FAXE E 2 Offset (10, 54);
			FAXE E 7 Offset (10, 150) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			TNT1 A 0 A_ReFire;
			FAXE A 1 Offset (0, 60) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 52) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 44) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 36) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1;
			Goto Ready;
			
		AltFireDown:
			TNT1 A 10;
			FAXE B 4 Offset (15, 32);
			FAXE C 3 Offset (15, 32);
			FAXE D 2 Offset (15, 32);
			TNT1 A 0 A_PlaySound("FighterHammerMiss", CHAN_WEAPON);
			FAXE D 1 Offset (-5, 70) A_Melee("HeavyAxeHurtBox", 100, 25, 5, 48, -20, 10, -10, 45, -160, -160);
			FAXE D 2 Offset (-25, 90);
			FAXE E 1 Offset (15, 32);
			FAXE E 2 Offset (10, 54);
			FAXE E 7 Offset (10, 150) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			TNT1 A 0 A_ReFire;
			FAXE A 1 Offset (0, 60) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 52) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 44) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 36) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1;
			Goto Ready;
			
		SelectGlow:
			FAXE L 1 A_FAxeCheckUpG;
			Loop;
			
		DeselectGlow:
			FAXE L 1 A_Lower;
			Loop;
			
		ReadyGlow:
			FAXE LLL 1 A_FAxeCheckReadyG;
			FAXE MMM 1 A_FAxeCheckReadyG;
			Loop;
			
		FireGlow:
			TNT1 A 0 A_CheckGlowSwing;
			FAXE N 4 Offset (15, 32);
			FAXE O 3 Offset (15, 32);
			FAXE P 2 Offset (15, 32);
			TNT1 A 0 A_PlaySound("FighterHammerMiss", CHAN_WEAPON);
			FAXE P 1 Offset (-5, 70)
			{
				double minAng = 10;
				double maxAng = -20;
				double rol = 20;
				
				if (player.refire % 2)
				{
					minAng = -20;
					maxAng = 10;
					rol *= -1;
				}
				
				A_Melee("AxeHurtBox", 37, 25, 5, 48, minAng, maxAng, 10, -15, rol, rol);
			}
			FAXE P 2 Offset (-25, 90);
			FAXE Q 1 Offset (15, 32);
			FAXE Q 2 Offset (10, 54);
			FAXE Q 7 Offset (10, 150) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			TNT1 A 0 A_ReFire;
			FAXE A 1 Offset (0, 60) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 52) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 44) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 36) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1;
			Goto ReadyGlow;
			
		FireGlowLeft:
			FAXE N 4 Offset (15, 32);
			FAXE O 3 Offset (15, 32);
			FAXE P 2 Offset (15, 32);
			TNT1 A 0 A_PlaySound("FighterHammerMiss", CHAN_WEAPON);
			FAXE P 1 Offset (-5, 70) A_Melee("AxeHurtBox", 25, 25, 5, 48, 45, -45, 0, 0, 90, 90);
			FAXE P 2 Offset (-25, 90);
			FAXE Q 1 Offset (15, 32);
			FAXE Q 2 Offset (10, 54);
			FAXE Q 7 Offset (10, 150) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			TNT1 A 0 A_ReFire;
			FAXE A 1 Offset (0, 60) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 52) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 44) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 36) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1;
			Goto ReadyGlow;
			
		FireGlowRight:
			FAXE N 4 Offset (15, 32);
			FAXE O 3 Offset (15, 32);
			FAXE P 2 Offset (15, 32);
			TNT1 A 0 A_PlaySound("FighterHammerMiss", CHAN_WEAPON);
			FAXE P 1 Offset (-5, 70) A_Melee("AxeHurtBox", 50, 25, 5, 48, -45, 45, 0, 0, -90, -90);
			FAXE P 2 Offset (-25, 90);
			FAXE Q 1 Offset (15, 32);
			FAXE Q 2 Offset (10, 54);
			FAXE Q 7 Offset (10, 150) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			TNT1 A 0 A_ReFire;
			FAXE A 1 Offset (0, 60) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 52) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 44) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 36) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1;
			Goto ReadyGlow;
			
		FireGlowUp:
			FAXE N 4 Offset (15, 32);
			FAXE O 3 Offset (15, 32);
			FAXE P 2 Offset (15, 32);
			TNT1 A 0 A_PlaySound("FighterHammerMiss", CHAN_WEAPON);
			FAXE P 1 Offset (-5, 70) A_Melee("AxeHurtBox", 50, 25, 5, 48, 0, 0, 45, -10);
			FAXE P 2 Offset (-25, 90);
			FAXE Q 1 Offset (15, 32);
			FAXE Q 2 Offset (10, 54);
			FAXE Q 7 Offset (10, 150) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			TNT1 A 0 A_ReFire;
			FAXE A 1 Offset (0, 60) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 52) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 44) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 36) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1;
			Goto ReadyGlow;
			
		FireGlowDown:
			FAXE N 4 Offset (15, 32);
			FAXE O 3 Offset (15, 32);
			FAXE P 2 Offset (15, 32);
			TNT1 A 0 A_PlaySound("FighterHammerMiss", CHAN_WEAPON);
			FAXE P 1 Offset (-5, 70) A_Melee("AxeHurtBox", 50, 25, 5, 48, -20, 10, -10, 45, -160, -160);
			FAXE P 2 Offset (-25, 90);
			FAXE Q 1 Offset (15, 32);
			FAXE Q 2 Offset (10, 54);
			FAXE Q 7 Offset (10, 150) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			TNT1 A 0 A_ReFire;
			FAXE A 1 Offset (0, 60) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 52) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 44) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1 Offset (0, 36) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOPRIMARY);
			FAXE A 1;
			Goto ReadyGlow;
			
		AltFireGlow:
			TNT1 A 0 A_CheckGlowSwing(true);
			TNT1 A 10;
			FAXE N 4 Offset (15, 32);
			FAXE O 3 Offset (15, 32);
			FAXE P 2 Offset (15, 32);
			TNT1 A 0 A_PlaySound("FighterHammerMiss", CHAN_WEAPON);
			FAXE P 1 Offset (-5, 70)
			{
				double minAng = 10;
				double maxAng = -20;
				double rol = 20;
				
				if (player.refire % 2)
				{
					minAng = -20;
					maxAng = 10;
					rol *= -1;
				}
				
				A_Melee("AxeHurtBox", 75, 25, 5, 48, minAng, maxAng, 10, -15, rol, rol);
			}
			FAXE P 2 Offset (-25, 90);
			FAXE Q 1 Offset (15, 32);
			FAXE Q 2 Offset (10, 54);
			FAXE Q 7 Offset (10, 150) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			TNT1 A 0 A_ReFire;
			FAXE A 1 Offset (0, 60) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 52) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 44) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 36) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1;
			Goto ReadyGlow;
			
		AltFireGlowLeft:
			TNT1 A 10;
			FAXE N 4 Offset (15, 32);
			FAXE O 3 Offset (15, 32);
			FAXE P 2 Offset (15, 32);
			TNT1 A 0 A_PlaySound("FighterHammerMiss", CHAN_WEAPON);
			FAXE P 1 Offset (-5, 70) A_Melee("HeavyAxeHurtBox", 50, 25, 5, 48, 45, -45, 0, 0, 90, 90);
			FAXE P 2 Offset (-25, 90);
			FAXE Q 1 Offset (15, 32);
			FAXE Q 2 Offset (10, 54);
			FAXE Q 7 Offset (10, 150) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			TNT1 A 0 A_ReFire;
			FAXE A 1 Offset (0, 60) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 52) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 44) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 36) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1;
			Goto ReadyGlow;
			
		AltFireGlowRight:
			TNT1 A 10;
			FAXE N 4 Offset (15, 32);
			FAXE O 3 Offset (15, 32);
			FAXE P 2 Offset (15, 32);
			TNT1 A 0 A_PlaySound("FighterHammerMiss", CHAN_WEAPON);
			FAXE P 1 Offset (-5, 70) A_Melee("HeavyAxeHurtBox", 50, 25, 5, 48, -45, 45, 0, 0, -90, -90);
			FAXE P 2 Offset (-25, 90);
			FAXE Q 1 Offset (15, 32);
			FAXE Q 2 Offset (10, 54);
			FAXE Q 7 Offset (10, 150) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			TNT1 A 0 A_ReFire;
			FAXE A 1 Offset (0, 60) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 52) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 44) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 36) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1;
			Goto ReadyGlow;
			
		AltFireGlowUp:
			TNT1 A 10;
			FAXE N 4 Offset (15, 32);
			FAXE O 3 Offset (15, 32);
			FAXE P 2 Offset (15, 32);
			TNT1 A 0 A_PlaySound("FighterHammerMiss", CHAN_WEAPON);
			FAXE P 1 Offset (-5, 70) A_Melee("HeavyAxeHurtBox", 100, 25, 5, 48, 0, 0, 45, -10);
			FAXE P 2 Offset (-25, 90);
			FAXE Q 1 Offset (15, 32);
			FAXE Q 2 Offset (10, 54);
			FAXE Q 7 Offset (10, 150) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			TNT1 A 0 A_ReFire;
			FAXE A 1 Offset (0, 60) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 52) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 44) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 36) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1;
			Goto ReadyGlow;
			
		AltFireGlowDown:
			TNT1 A 10;
			FAXE N 4 Offset (15, 32);
			FAXE O 3 Offset (15, 32);
			FAXE P 2 Offset (15, 32);
			TNT1 A 0 A_PlaySound("FighterHammerMiss", CHAN_WEAPON);
			FAXE P 1 Offset (-5, 70) A_Melee("HeavyAxeHurtBox", 100, 25, 5, 48, -20, 10, -10, 45, -160, -160);
			FAXE P 2 Offset (-25, 90);
			FAXE Q 1 Offset (15, 32);
			FAXE Q 2 Offset (10, 54);
			FAXE Q 7 Offset (10, 150) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			TNT1 A 0 A_ReFire;
			FAXE A 1 Offset (0, 60) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 52) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 44) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1 Offset (0, 36) A_WeaponReady(WRF_NOBOB | WRF_ALLOWUSER1 | WRF_NOSECONDARY);
			FAXE A 1;
			Goto ReadyGlow;
	}
	
	override State GetUpState ()
	{
		super.GetUpState();
		return (Ammo1.Amount || Ammo2.Amount) ? FindState ("SelectGlow") : Super.GetUpState();
	}

	override State GetDownState ()
	{
		super.GetDownState();
		return (Ammo1.Amount || Ammo2.Amount) ? FindState ("DeselectGlow") : Super.GetDownState();
	}

	override State GetReadyState ()
	{
		super.GetReadyState();
		return (Ammo1.Amount || Ammo2.Amount) ? FindState ("ReadyGlow") : Super.GetReadyState();
	}

	override State GetAtkState (bool hold)
	{
		return (Ammo1.Amount || Ammo2.Amount) ? FindState ("FireGlow") :  Super.GetAtkState(hold);
	}

	action void A_FAxeCheckReady()
	{
		if (player == null)
		{
			return;
		}
		Weapon w = player.ReadyWeapon;
		if ((w.Ammo1 && w.Ammo1.Amount > 0) || (w.Ammo2 && w.Ammo2.Amount > 0))
		{
			player.SetPsprite(PSP_WEAPON, w.FindState("ReadyGlow"));
		}
		else
		{
			A_WeaponReady(WRF_ALLOWUSER1);
		}
	}

	action void A_FAxeCheckReadyG()
	{
		if (player == null)
		{
			return;
		}
		Weapon w = player.ReadyWeapon;
		if ((!w.Ammo1 || w.Ammo1.Amount <= 0) && (!w.Ammo2 || w.Ammo2.Amount <= 0))
		{
			player.SetPsprite(PSP_WEAPON, w.FindState("Ready"));
		}
		else
		{
			A_WeaponReady(WRF_ALLOWUSER1);
		}
	}

	action void A_FAxeCheckUp()
	{
		if (player == null)
		{
			return;
		}
		Weapon w = player.ReadyWeapon;
		if ((w.Ammo1 && w.Ammo1.Amount > 0) || (w.Ammo2 && w.Ammo2.Amount > 0))
		{
			player.SetPsprite(PSP_WEAPON, w.FindState("SelectGlow"));
		}
		else
		{
			A_Raise();
		}
	}

	action void A_FAxeCheckUpG()
	{
		if (player == null)
		{
			return;
		}
		Weapon w = player.ReadyWeapon;
		if ((!w.Ammo1 || w.Ammo1.Amount <= 0) && (!w.Ammo2 || w.Ammo2.Amount <= 0))
		{
			player.SetPsprite(PSP_WEAPON, w.FindState("Select"));
		}
		else
		{
			A_Raise();
		}
	}
	
	action void A_CheckGlowSwing(bool heavy = false)
	{
		Weapon w = player.ReadyWeapon;
		switch (invoker.direction)
		{
			case DIR_LEFT:
				if (heavy)
					player.SetPsprite(PSP_WEAPON, w.FindState("AltFireGlowLeft"));
				else
					player.SetPsprite(PSP_WEAPON, w.FindState("FireGlowLeft"));
				break;
				
			case DIR_RIGHT:
				if (heavy)
					player.SetPsprite(PSP_WEAPON, w.FindState("AltFireGlowRight"));
				else
					player.SetPsprite(PSP_WEAPON, w.FindState("FireGlowRight"));
				break;
				
			case DIR_FORW:
				if (heavy)
					player.SetPsprite(PSP_WEAPON, w.FindState("AltFireGlowUp"));
				else
					player.SetPsprite(PSP_WEAPON, w.FindState("FireGlowUp"));
				break;
				
			case DIR_BACK:
				if (heavy)
					player.SetPsprite(PSP_WEAPON, w.FindState("AltFireGlowDown"));
				else
					player.SetPsprite(PSP_WEAPON, w.FindState("FireGlowDown"));
				break;
		}
	}

	action void A_FAxeCheckAtk()
	{
		if (player == null)
		{
			return;
		}
		Weapon w = player.ReadyWeapon;
		if ((w.Ammo1 && w.Ammo1.Amount > 0) || (w.Ammo2 && w.Ammo2.Amount > 0))
		{
			player.SetPsprite(PSP_WEAPON, w.FindState("FireGlow"));
		}
	}
	
	action void A_FAxeCheckHeavyAtk()
	{
		if (player == null)
		{
			return;
		}
		Weapon w = player.ReadyWeapon;
		if ((w.Ammo1 && w.Ammo1.Amount > 0) || (w.Ammo2 && w.Ammo2.Amount > 0))
		{
			player.SetPsprite(PSP_WEAPON, w.FindState("AltFireGlow"));
		}
	}
}

class ShieldBash : HurtBox
{
	Default
	{
		Radius 16;
		Height 16;
		DamageType "Blunt";
		HurtBox.AilmentType "Stumble";
		HurtBox.AilmentPower 100;
		HurtBox.ForwardOffset 16;
		HurtBox.SideOffset -4;
		AttackSound "FighterPunchHitThing";
		ActiveSound "FighterPunchHitWall";
		
		+HURTBOX.DONTINTERPOLATE
	}
}

class AxeHurtBox : HurtBox
{
	Default
	{
		Radius 2;
		Height 8;
		DamageType "Cleave";
		HurtBox.AilmentPower 50;
		HurtBox.AilmentType "Bleed";
		HurtBox.AilmentDamage 10;
		HurtBox.BonusDamageType "Electric";
		HurtBox.BonusAilmentPower 50;
		HurtBox.BonusAilmentType "Shock";
		HurtBox.BonusType "BlueMana";
		HurtBox.ReserveBonusType "RedMana";
		HurtBox.BonusCost 2;
		HurtBox.ForwardOffset 32;
		ActiveSound "FighterHammerHitWall";
		AttackSound "FighterAxeHitThing";
		
		+HURTBOX.NOBONUSMULTI
	}
}

class HeavyAxeHurtBox : AxeHurtBox
{
	override void BonusAttack(Actor mo)
	{
		if (!mo)
			return;
		
		bool useNormal = false;
		bool useReserve = false;
		bool spawnExplosion = true;
						
		Ammo normal;
		Ammo reserve;
						
		if (!sv_infiniteammo && !target.FindInventory("PowerInfiniteAmmo"))
		{
			normal = Ammo(target.FindInventory(bonusType));
			reserve = Ammo(target.FindInventory(reserveBonusType));
							
			if (normal && normal.amount < 3)
			{
				if (!reserve || (reserve.amount+normal.amount) < 3)
					spawnExplosion = false;
				else
				{
					if (normal.amount > 0)
						useNormal = true;
									
					useReserve = true;
				}
			}
			else if (normal)
				useNormal = true;
		}
		
		if (spawnExplosion)
		{
			if (useNormal || useReserve)
			{
				int cost = 3;
										
				if (normal && useNormal)
				{
					int take = min(normal.amount, 3);
					cost -= take;
					normal.amount -= take;
				}
										
				if (reserve && useReserve)
					reserve.amount -= cost;
			}
			
			let ex = Spawn("AxeExplosion", mo.pos+(0,0,mo.default.height/2), ALLOW_REPLACE);
			if (ex)
			{
				ex.target = target;
				ex.ExplodeMissile();
			}
		}
	}
}

class AxeExplosion : RPGMissile
{
	Default
	{
		Radius 64;
		Damage 50;
		DamageType "Electric";
		RPGMissile.AilmentPower 25;
		RPGMissile.AilmentType "Shock";
		RenderStyle "Add";
		
		+ZDOOMTRANS
	}
	
	States
	{
		Spawn:
		Death:
			FAXE R 4 Bright A_Explode(damage, radius, 0, false, radius, damagetype: damageType);
			FAXE STUVWX 4 Bright;
			Stop;
	}
}