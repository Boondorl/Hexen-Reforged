class GlobalEventsHandler : EventHandler
{
	bool bMarkers;
	
	override void WorldThingSpawned(WorldEvent e)
	{
		if (!e.thing)
			return;
		
		if (!bMarkers && e.thing.GetClass() == "Marker")
		{
			e.thing.Destroy();
		}
		else if (e.thing.bMissile && e.thing.target && e.thing.target.player)
		{
			for (int i = 0; i < players.Size(); ++i)
			{
				if (!playerInGame[i])
					continue;
				
				let bm = BuffManager(players[i].mo.FindInventory("BuffManager"));
				if (bm)
				{
					for (int j = 0; j < bm.buffs.Size(); ++j)
					{
						if (bm.buffs[j])
							bm.buffs[j].MissileFired(e.thing);
					}
				}
			}
		}
		else if (e.thing is "Inventory")
		{
			if (e.thing is "ArtiEgg" || e.thing is "ArtiHealingRadius" || e.thing is "CrystalVial")
				e.thing.Destroy();
			else if (e.thing is "ArtiInvulnerability2")
			{
				e.thing.A_SpawnItemEx("RPGKrater", flags: SXF_NOCHECKPOSITION|SXF_TRANSFERSPECIAL, tid: e.thing.tid);
				e.thing.Destroy();
			}
			else if (e.thing is "ArtiDarkServant")
			{
				e.thing.A_SpawnItemEx("RPGUrn", flags: SXF_NOCHECKPOSITION|SXF_TRANSFERSPECIAL, tid: e.thing.tid);
				e.thing.Destroy();
			}
			else if (e.thing is "PuzzleItem")
				Inventory(e.thing).bInvBar = false;
		}
	}
	
	override void WorldThingDied(WorldEvent e)
	{
		for (int i = 0; i < players.Size(); ++i)
		{
			if (!playerInGame[i])
				continue;
			
			let bm = BuffManager(players[i].mo.FindInventory("BuffManager"));
			if (bm)
			{
				for (int j = 0; j < bm.buffs.Size(); ++j)
				{
					if (bm.buffs[j])
						bm.buffs[j].ThingDied(e.thing, e.inflictor);
				}
			}
		}
	}
	
	override void CheckReplacement(ReplaceEvent e)
	{
		if (e.replacee == "Ettin")
		{
			if (random(0,1))
				e.replacement = "ReforgedClink";
			else
				e.replacement = "ReforgedEttin";
		}
		else if (e.replacee == "Centaur")
		{
			if (random(0,1))
				e.replacement = "ReforgedKnight";
			else
				e.replacement = "ReforgedCentaur";
		}
	}
	
	override void NetworkProcess(ConsoleEvent e)
	{
		Array<string> command;
		e.Name.Split(command, ":");
		
		if (command.Size() == 2)
		{
			if (command[0] ~== "Spell")
			{
				let rpg = RPGPlayer(players[e.Player].mo);
				if (rpg)
					rpg.UseSkill(command[1].ToInt(10));
			}
		}
		else if (e.Player == net_arbitrator && e.Name == "ToggleMarker")
		{
			bMarkers = !bMarkers;
			if (bMarkers)
				Console.printf("Markers enabled");
			else
				Console.printf("Markers disabled");
		}
	}
}