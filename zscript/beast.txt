class ReforgedBeast : RPGMonster replaces Demon2
{
	private int flameDuration;
	private int meleeCoolDown; // For flamethrower
	
	Default
	{
		RPGMonster.JumpSpeed 6;
		RPGMonster.XP 100;
		Health 250;
		Radius 32;
		Height 74;
		DeathHeight 37;
		Mass 200;
		Damage 75;
		Speed 3;
		MeleeRange 128;
		Painchance 100;
		DamageFactor "Fire", 0.75;
		DamageFactor "Burn", 0.75;
		SeeSound "beast/sight";
		AttackSound "beast/attack";
		PainSound "beast/pain";
		DeathSound "beast/death";
		ActiveSound "beast/active";
		Obituary "$OB_BEAST";
		Tag "$FN_BEAST";
		
		+RPGMONSTER.JUMPER
		-NOICEDEATH
	}
	
	States
	{
		Spawn:
			BEAS AABB 5 A_MonsterLook;
			Loop;
			
		See:
			BEAS ABCDEF 4 A_MonsterChase;
			Loop;
			
		Melee:
			TNT1 A 0 {flameDuration = TICRATE;}
			BEAS H 10 A_MonsterFaceTarget;
			TNT1 A 0 {meleeCoolDown = 70;}
			BEAS I 2 A_MonsterProjectile("BeastFlame", 48);
			TNT1 A 0
			{
				if (!target || target.health <= 0 || --flameDuration <= 0 || Distance3D(target)-target.radius > MeleeRange*2)
					SetState(SeeState);
			}
			Goto Melee+2;
			
		Missile:
			BEAS H 10 A_MonsterFaceTarget;
			BEAS I 10 A_MonsterProjectile("RBeastBall", 48);
			Goto See;
			
		Stumble:
			TNT1 A 0 A_Stumble;
			BEAS G 18 A_Pain;
			Goto See;
			
		Shock:
			BEAS G 9 A_StartSound(PainSound, CHAN_VOICE);
			BEAS G 9;
			BEAS G 9 A_StartSound(PainSound, CHAN_VOICE);
			BEAS G 9;
			BEAS G 9 A_StartSound(PainSound, CHAN_VOICE);
			BEAS G 9;
			BEAS G 9 A_StartSound(PainSound, CHAN_VOICE);
			BEAS G 9;
			Goto See;
			
		Pain:
			BEAS G 3;
			BEAS G 3 A_Pain;
			Goto See;
			
		Death:
			BEAS R 6;
			BEAS S 6 A_Scream;
			BEAS TUV 6;
			BEAS W 6 A_NoBlocking;
			BEAS XY 6;
			BEAS Z -1;
			Stop;
			
		XDeath:
			BEAS J 5;
			BEAS K 6 A_Scream;
			BEAS L 5;
			BEAS M 6;
			BEAS N 5;
			BEAS O 6 A_NoBlocking;
			BEAS P 5;
			BEAS Q -1;
			Stop;
			
		Raise:
			BEAS YXWVUTSR 6;
			Goto See;
			
		XRaise:
			BEAS P 5;
			BEAS O 6;
			BEAS N 5;
			BEAS M 6;
			BEAS L 5;
			BEAS K 6;
			BEAS J 5;
			Goto See;
	}
	
	override void BeginPlay()
	{
		super.BeginPlay();
		
		CreateBox("BeastBody");
		CreateBox("BeastShoulder");
		CreateBox("BeastHead");
	}
	
	override void InitializeAilments()
	{
		SetAilment(0, 'Shock');
		SetAilment(1, 'Chill');
		SetAilment(2, 'Poison');
		SetAilment(3, 'Stumble');
		SetAilment(4, 'Flinch');
		SetAilment(5, 'Bleed');
	}
	
	override bool CheckMelee()
	{
		if (target && meleeCoolDown <= 0 && CheckMelee3D())
		{
			let tracer = SightTracer(new("SightTracer"));
			if (tracer)
			{
				tracer.bMissile = true;
				tracer.master = self;
				tracer.target = target;
				tracer.bThruObj = bAttackThruObj;
				tracer.bThruMonst = bAttackThruMonst;
				
				double h = missileCheckHeight ? missileCheckHeight : height/2 + 4;
				h -= floorclip;
				Vector3 start = pos + (0,0,h);
				Vector3 dir = Vec3To(target) + (0,0,(target.height/2-target.floorclip) - h);
				
				tracer.Trace(start, CurSector, dir.Unit(), dir.Length(), 0);
				if (tracer.results.hitType == TRACE_HitNone || tracer.results.hitActor == target)
					return true;
			}
		}
		
		return false;
	}
	
	override void Tick()
	{
		if (!isFrozen())
		{
			if (meleeCoolDown > 0)
				--meleeCoolDown;
		}
		
		super.Tick();
	}
}

class BeastBody : CollisionBox
{
	Default
	{
		Radius 32;
		Height 54;
	}
}

class BeastShoulder : CollisionBox
{
	Default
	{
		CollisionBox.Length 19;
		CollisionBox.ForwardOffset -19;
		CollisionBox.UpOffset 54;
		Radius 32;
		Height 20;
		
		+COLLISIONBOX.ORIENTED
	}
}

class BeastHead : CollisionBox
{
	Default
	{
		CollisionBox.Multi 1.2;
		CollisionBox.ForwardOffset 19;
		CollisionBox.UpOffset 54;
		Radius 13;
		Height 20;
		
		+COLLISIONBOX.CRITICALZONE
	}
}

class RBeastBall : RPGMissile
{
	Default
	{
		Radius 6;
		Height 12;
		Speed 16;
		Damage 30;
		DamageType "Fire";
		RPGMissile.AilmentType "Burn";
		RPGMissile.AilmentPower 35;
		RPGMissile.AilmentDamage 10;
		RenderStyle "Add";
		SeeSound "beast/attack";
		
		-ACTIVATEIMPACT
		-ACTIVATEPCROSS
		+SPAWNSOUNDSOURCE
		+ZDOOMTRANS
	}
	
	States
	{
		Spawn:
			FRB1 AABBCC 2 Bright A_SpawnItemEx("Puffy", random2[BeastPuff]()*0.015625, random2[BeastPuff]()*0.015625, random2[BeastPuff]()*0.015625, 
												0,0,0,0,SXF_ABSOLUTEPOSITION, 64);
			Loop;
			
		Death:
			FRB1 D 4 Bright
			{
				for (int i = 0; i < 8; ++i)
				{
					let ball = Spawn("BeastBallSmall", pos, ALLOW_REPLACE);
					if (ball)
					{
						ball.target = target;
						ball.angle = angle + i*45;
						ball.Vel3DFromAngle(ball.speed, ball.angle, -45);
					}
				}
			}
			FRB1 EFGH 4 Bright;
			Stop;
	}
}

class BeastBallSmall : RPGMissile
{
	Default
	{
		Radius 2;
		Height 4;
		Speed 8;
		Scale 0.5;
		Damage 5;
		DamageType "Fire";
		RenderStyle "Add";
		
		-ACTIVATEIMPACT
		-ACTIVATEPCROSS
		-NOGRAVITY
		+ZDOOMTRANS
	}
	
	States
	{
		Spawn:
			FRB1 AABBCC 2 Bright;
			Loop;
			
		Death:
			FRB1 DEFGH 4 Bright;
			Stop;
	}
}

class BeastFlame : RPGMissile
{
	Default
	{
		Radius 2;
		Height 4;
		Speed 16;
		Damage 4;
		Threshold 8;
		Scale 0.5;
		DamageType "Fire";
		RPGMissile.AilmentType "Burn";
		RPGMissile.AilmentPower 10;
		RPGMissile.AilmentDamage 4;
		RenderStyle "Add";
		Obituary "$OB_MPPPHOENIXROD";
		
		+ZDOOMTRANS
		+RPGMISSILE.PENETRATING
		+RPGMISSILE.SHIELDBUSTER
		+RPGMISSILE.NOCRIT
	}

	States
	{
		Spawn:
			FX09 ABA 2 BRIGHT;
			FX09 B 2 BRIGHT;
			FX09 CDEF 2 BRIGHT;
			Stop;
			
		Death:
			FX09 G 3 BRIGHT;
			FX09 H 3 BRIGHT A_FloatPuff;
			FX09 I 4 BRIGHT;
			FX09 JK 5 BRIGHT;
			Stop;
	}
	
	override void Tick()
	{
		if (bMissile && radius < threshold && !isFrozen())
		{
			A_SetScale(scale.x + 0.25);
			A_SetSize(radius+1, height+2);
		}
		
		super.Tick();
	}

	void A_FloatPuff()
	{
		Vel.Z += 1.8;
	}
}