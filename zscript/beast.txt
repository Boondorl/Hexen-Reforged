class ReforgedBeast : RPGMonster replaces Demon2
{
	const ChunkFlags = SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY;
	
	private int flameDuration;
	private int meleeCoolDown; // For flamethrower
	
	Default
	{
		RPGMonster.JumpSpeed 6;
		RPGMonster.XP 100;
		Health 250;
		Radius 32;
		Height 80;
		DeathHeight 40;
		Mass 220;
		Damage 75;
		Speed 3;
		MeleeRange 128;
		Painchance 100;
		DamageFactor "Fire", 0.75;
		DamageFactor "Burn", 0.75;
		SeeSound "DemonSight";
		AttackSound "DemonAttack";
		PainSound "DemonPain";
		DeathSound "DemonDeath";
		ActiveSound "DemonActive";
		Obituary "$OB_DEMON2";
		Tag "$FN_DEMON1";
		
		+RPGMONSTER.JUMPER
	}
	
	States
	{
		Spawn:
			DEM2 AABB 5 A_MonsterLook;
			Loop;
			
		See:
			DEM2 ABCD 4 A_MonsterChase;
			Loop;
			
		Melee:
			TNT1 A 0 {flameDuration = TICRATE;}
			DEM2 E 5 A_MonsterFaceTarget;
			DEM2 F 5 A_MonsterFaceTarget;
			TNT1 A 0 {meleeCoolDown = 70;}
			DEM2 G 2 A_MonsterProjectile("DemonFlame", 62);
			TNT1 A 0
			{
				if (!target || target.health <= 0 || --flameDuration <= 0 || Distance3D(target)-target.radius > MeleeRange*2)
					SetState(SeeState);
			}
			Goto Melee+3;
			
		Missile:
			DEM2 E 5 A_FaceTarget;
			DEM2 F 6 A_FaceTarget;
			DEM2 G 5 A_MonsterProjectile("Demon2RFX1", 62);
			Goto See;
			
		Stumble:
			TNT1 A 0 A_Stumble;
			DEM2 E 18 A_Pain;
			Goto See;
			
		Shock:
			DEM2 E 9 A_StartSound(PainSound, CHAN_VOICE);
			DEM2 E 9;
			DEM2 E 9 A_StartSound(PainSound, CHAN_VOICE);
			DEM2 E 9;
			DEM2 E 9 A_StartSound(PainSound, CHAN_VOICE);
			DEM2 E 9;
			DEM2 E 9 A_StartSound(PainSound, CHAN_VOICE);
			DEM2 E 9;
			Goto See;
			
		Pain:
			DEM2 E 4;
			DEM2 E 4 A_Pain;
			Goto See;
			
		 Death:
			DEM2 HI 6;
			DEM2 J 6 A_Scream;
			DEM2 K 6 A_NoBlocking;
			DEM2 L 6 A_QueueCorpse;
			DEM2 MNO 6;
			DEM2 P -1;
			Stop;
			
		 XDeath:
			DEM2 H 6;
			DEM2 I 0 A_SpawnItemEx("Demon2Chunk1", 0, 0, 45, frandom[DemonChunks](1, 4.984375)*cos(angle+90),
								   frandom[DemonChunks](1, 4.984375)*sin(angle+90), 8, 90, ChunkFlags);
			DEM2 I 0 A_SpawnItemEx("Demon2Chunk2", 0, 0, 45, frandom[DemonChunks](1, 4.984375)*cos(angle-90),
								   frandom[DemonChunks](1, 4.984375)*sin(angle-90), 8, 270, ChunkFlags);
			DEM2 I 0 A_SpawnItemEx("Demon2Chunk3", 0, 0, 45, frandom[DemonChunks](1, 4.984375)*cos(angle-90),
								   frandom[DemonChunks](1, 4.984375)*sin(angle-90), 8, 270, ChunkFlags);
			DEM2 I 0 A_SpawnItemEx("Demon2Chunk4", 0, 0, 45, frandom[DemonChunks](1, 4.984375)*cos(angle-90),
								   frandom[DemonChunks](1, 4.984375)*sin(angle-90), 8, 270, ChunkFlags);
			DEM2 I 6 A_SpawnItemEx("Demon2Chunk5", 0, 0, 45, frandom[DemonChunks](1, 4.984375)*cos(angle-90),
								   frandom[DemonChunks](1, 4.984375)*sin(angle-90), 8, 270, ChunkFlags);
			Goto Death+2;
			
		Raise:
			DEM2 ONMLKJIH 6;
			Goto See;
			
		Ice:
			DEMN Q 5 A_FreezeDeath;
			DEMN Q 1 A_FreezeDeathChunks;
			Wait;
	}
	
	override void BeginPlay()
	{
		super.BeginPlay();
		
		CreateBox("SerpentBody");
		CreateBox("SerpentHead2");
	}
	
	override void InitializeAilments()
	{
		SetAilment(0, 'Shock');
		SetAilment(1, 'Chill');
		SetAilment(2, 'Poison');
		SetAilment(3, 'Stumble');
		SetAilment(4, 'Flinch');
		SetAilment(5, 'Bleed');
	}
	
	override bool CheckMelee()
	{
		if (target && meleeCoolDown <= 0 && CheckMelee3D())
		{
			let tracer = SightTracer(new("SightTracer"));
			if (tracer)
			{
				tracer.bMissile = true;
				tracer.master = self;
				tracer.target = target;
				tracer.bThruObj = bAttackThruObj;
				tracer.bThruMonst = bAttackThruMonst;
				
				double h = missileCheckHeight ? missileCheckHeight : height/2 + 4;
				h -= floorclip;
				Vector3 start = pos + (0,0,h);
				Vector3 dir = Vec3To(target) + (0,0,(target.height/2-target.floorclip) - h);
				
				tracer.Trace(start, CurSector, dir.Unit(), dir.Length(), 0);
				if (tracer.results.hitType == TRACE_HitNone || tracer.results.hitActor == target)
					return true;
			}
		}
		
		return false;
	}
	
	override void Tick()
	{
		if (!isFrozen())
		{
			if (meleeCoolDown > 0)
				--meleeCoolDown;
		}
		
		super.Tick();
	}
}

class Demon2RFX1 : RPGMissile
{
	Default
	{
		Radius 6;
		Height 12;
		Speed 16;
		Damage 30;
		DamageType "Fire";
		RPGMissile.AilmentType "Burn";
		RPGMissile.AilmentPower 35;
		RPGMissile.AilmentDamage 10;
		RenderStyle "Add";
		SeeSound "DemonMissileFire";
		DeathSound "DemonMissileExplode";
		
		-ACTIVATEIMPACT
		-ACTIVATEPCROSS
		+SPAWNSOUNDSOURCE
		+ZDOOMTRANS
	}
	
	States
	{
		Spawn:
			DMFX ABC 4 Bright;
			Loop;
			
		Death:
			TNT1 A 0
			{
				for (int i = 0; i < 8; ++i)
				{
					let ball = Spawn("Demon2RFXSmall", pos, ALLOW_REPLACE);
					if (ball)
					{
						ball.target = target;
						ball.angle = angle + i*45;
						ball.Vel3DFromAngle(ball.speed, ball.angle, -45);
					}
				}
			}
			DMFX DE 4 Bright;
			DMFX FGH 3 Bright;
			Stop;
	}
}

class Demon2RFXSmall : RPGMissile
{
	Default
	{
		Radius 2;
		Height 4;
		Speed 8;
		Scale 0.35;
		Damage 5;
		DamageType "Fire";
		RPGMissile.AilmentType "Burn";
		RPGMissile.AilmentPower 10;
		RPGMissile.AilmentDamage 3;
		RenderStyle "Add";
		
		-ACTIVATEIMPACT
		-ACTIVATEPCROSS
		-NOGRAVITY
		+ZDOOMTRANS
	}
	
	States
	{
		Spawn:
			DMFX ABC 4 Bright;
			Loop;
			
		Death:
			DMFX DE 4 Bright;
			DMFX FGH 3 Bright;
			Stop;
	}
}

class DemonFlame : RPGMissile
{
	Default
	{
		Radius 2;
		Height 4;
		Speed 16;
		Damage 4;
		Threshold 8;
		Scale 0.5;
		DamageType "Fire";
		RPGMissile.AilmentType "Burn";
		RPGMissile.AilmentPower 10;
		RPGMissile.AilmentDamage 4;
		RenderStyle "Add";
		Obituary "$OB_MPPPHOENIXROD";
		
		+ZDOOMTRANS
		+RPGMISSILE.PENETRATING
		+RPGMISSILE.SHIELDBUSTER
		+RPGMISSILE.NOCRIT
	}

	States
	{
		Spawn:
			DMFX ABC 4 Bright;
			Loop;
			
		Death:
			DMFX DE 4 Bright;
			DMFX FGH 3 Bright;
			Stop;
	}
	
	override void Tick()
	{
		if (bMissile && radius < threshold && !isFrozen())
		{
			A_SetScale(scale.x + 0.25);
			A_SetSize(radius+1, height+2);
		}
		
		super.Tick();
	}
}